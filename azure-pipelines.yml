trigger:
- master
- staging
pr:
- master
- staging

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  buildResourceGroup: $(Build.BuildId)-testing-rg
  buildStorageAccount: $(Build.BuildId)storage
  buildFunctionAppName: '$(Build.BuildId)sv-func'
  appId: $(servicePrincipal.appId)
  password: $(servicePrincipal.password)
  tenantId: $(servicePrincipal.tenantId)
  engineKey: $(ENGINE_API_KEY)

steps:
# Build function to be archived
  - script: npm i 
    displayName: 'Install packages for archive'
  - script: rm -f local.settings.json azure-pipelines.yml README.md .gitignore .gitattributes && rmdir --ignore-fail-on-non-empty .git && rmdir --ignore-fail-on-non-empty .vscode
    displayName: 'Delete files that should not be published'
# Install Tooling for Build
  - script: sudo npm i -g apollo
    displayName: 'Install Apollo CLI'
  - script: sudo npm i -g azure-cli
    displayName: 'Install Azure CLI'
# Create testing function resources in Azure
  - script: az login --service-principal --username $(appId) --password $(password) --tenant $(tenantId)
    displayName: 'Azure Service Principal Login'
  - script: az group create --name $(buildResourceGroup) --location westus
    displayName: 'Create resource group for testing function'
  - script: az storage account create --name $(buildStorageAccount) --location westus --resource-group $(buildResourceGroup) --sku Standard_LRS
    displayName: 'Create storage account for testing function'
  - script: az functionapp create --resource-group $(buildResourceGroup) --consumption-plan-location westus --name $(buildFunctionAppName) --storage-account  $(buildStorageAccount) --runtime node # --deployment-source-url "https://github.com/michael-watson/apollo-server-azure-functions-tutorial" --deployment-source-branch $(Build.SourceBranch)
    displayName: 'Create testing function'
# Build function to be archived
  - script: npm i 
    displayName: 'Install packages for archive'
  - script: rm -f local.settings.json azure-pipelines.yml README.md .gitignore .gitattributes && rmdir --ignore-fail-on-non-empty .git && rmdir --ignore-fail-on-non-empty .vscode
    displayName: 'Delete files that should not be published'
# Archive and publish function to testing environment
  - task: ArchiveFiles@2
    displayName: 'Zip up files as build artifact'
    inputs:
      rootFolderOrFile: '$(Build.Repository.LocalPath)' 
      includeRootFolder: false
      archiveType: 'zip' 
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip' 
      replaceExistingArchive: true 
  - script: az functionapp deployment source config-zip  -g $(buildResourceGroup) -n $(buildFunctionAppName) --src $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
    displayName: 'Publish to testing function'
# Run Apollo Schema Check
  - script: apollo service:check --endpoint="https://$(buildFunctionAppName).azurewebsites.net/graphql" --key=$(engineKey)
    displayName: 'Apollo Schema Validation Check on testing function'
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact'
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      artifactName: drop
# Clean up Azure Resources
  - script: az group delete -n $(buildResourceGroup) --yes
    condition: always()
    displayName: 'Delete  Azure resource group'